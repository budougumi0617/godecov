version: 2.1

executors:
  golang:
    docker:
      - image: circleci/golang:1.11.5
    working_directory: /go/src/github.com/budougumi0617/godecov
    environment:
      - GOPATH: /go
      - SRC_PATH: /go/src/github.com/budougumi0617/godecov
      # For code coverage
      - TEST_RESULTS: /tmp/test-results
      - GO_COVERAGE_OUT: go-coverage.out
      - GO111MODULE: "on"

orbs:
  go-module: timakin/go-module@volatile
  reviewdog: timakin/reviewdog@volatile

branches: &branches
  only:
    - master
    - circleci
    - /pull.*/

jobs:
  build:
    executor: golang
    steps:
      - go-module/download:
          attach-workspace: true
          checkout: true
          persist-to-workspace: true
          project_name: godecov
          vendoring: false
          workspace-root: /go/src/github.com/budougumi0617/godecov
  lint:
    executor: golang
    steps:
      - checkout
      - run:
          name: setup
          command: |
            make setup
      - run:
          name: check
          command: |
            make check
  test:
    executor: golang
    steps:
      - checkout
      - run:
          name: Install test reporter
          command: |
            go get github.com/jstemmer/go-junit-report
      - run:
          name: Run Tests
          command: |
            cd $SRC_PATH
            mkdir ${TEST_RESULTS}
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            make test GO_TEST_FLAGS="-coverprofile=${GO_COVERAGE_OUT} -covermode=atomic" | tee ${TEST_RESULTS}/go-test.out
            go tool cover -html=${GO_COVERAGE_OUT} -o ${TEST_RESULTS}/go-coverage.html
      - run:
          name: Upload code coverage
          when: on_success
          command: |
            cd $SRC_PATH
            cat ${GO_COVERAGE_OUT} >> coverage.txt
            rm ${GO_COVERAGE_OUT}
            bash <(curl -fs https://codecov.io/bash)
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  review:
    executor: golang
    steps:
      - run:
          name: Off Modules
          command: |
            export GO111MODULE=off
      - reviewdog/review:
          linters: |
            golang.org/x/lint/golint
            github.com/kisielk/errcheck

workflows:
  version: 2
  build_test:
    jobs:
      - build
      - lint:
          requires:
            - build
      #   filters:
      #     branches:
      #       <<: *branches
      - test:
          requires:
            - build
      #   filters:
      #     branches:
      #       <<: *branches
      - review:
          requires:
            - build
